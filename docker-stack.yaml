services:
  backend:
    image: ghcr.io/patersss/tecktrackinvestbackend:${GIT_COMMIT_HASH:-latest}
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-appdb}
      DB_USERNAME: ${POSTGRES_USER:-admin}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      MONGO_URI: mongodb://root:example@mongo:27017/techTrackInvestMongo?authSource=admin&retryWrites=true&w=majority
      EMAIL_PASS: begy rvvu yxei myxw
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost}
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      - db-network
    deploy:
      update_config:
        order: start-first

      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 30s

  frontend:
    image: ghcr.io/patersss/tecktrackinvestfrontend:${GIT_COMMIT_HASH:-latest}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    networks:
      - db-network
    deploy:
      update_config:
        order: start-first

      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 30s

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    networks:
      - db-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: techTrackInvestMongo
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: mongod --bind_ip_all --wiredTigerCacheSizeGB 1.5
    volumes:
      - mongo_data:/data/db
    ports:
      - target: 27017
        published: 27017
        protocol: tcp
        mode: host
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure

networks:
  db-network:
    driver: overlay

volumes:
  mongo_data:
  postgres_data:
